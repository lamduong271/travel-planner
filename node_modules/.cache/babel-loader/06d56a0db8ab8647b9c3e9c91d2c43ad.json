{"ast":null,"code":"var _jsxFileName = \"/Users/lamduong/Planner/TripPlanner/TripPlanner/src/index.tsx\";\n\n/**\n * index.tsx\n *\n * This is the entry file for the application, only setup and boilerplate\n * code.\n */\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport FontFaceObserver from 'fontfaceobserver'; // Use consistent styling\n\nimport 'sanitize.css/sanitize.css';\nimport { App } from 'app';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { configureAppStore } from 'store/configureStore';\nimport { ThemeProvider } from 'styles/theme/ThemeProvider';\nimport reportWebVitals from 'reportWebVitals'; // Initialize languages\n\nimport './locales/i18n'; // Observe loading of Inter (to remove 'Inter', remove the <link> tag in\n// the index.html file and this observer)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst openSansObserver = new FontFaceObserver('Inter', {}); // When Inter is loaded, add a font-family using Inter to the body\n\nopenSansObserver.load().then(() => {\n  document.body.classList.add('fontLoaded');\n});\nconst store = configureAppStore();\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    children: /*#__PURE__*/_jsxDEV(HelmetProvider, {\n      children: /*#__PURE__*/_jsxDEV(React.StrictMode, {\n        children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 47,\n  columnNumber: 3\n}, this)); // Hot reloadable translation json files\n\nif (module.hot) {\n  module.hot.accept(['./locales/i18n'], () => {// No need to render the App again because i18next works with the hooks\n  });\n} // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/lamduong/Planner/TripPlanner/TripPlanner/src/index.tsx"],"names":["React","ReactDOM","Provider","FontFaceObserver","App","HelmetProvider","configureAppStore","ThemeProvider","reportWebVitals","openSansObserver","load","then","document","body","classList","add","store","root","createRoot","getElementById","render","module","hot","accept"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,yBAAP;AACA,OAAO,2BAAP;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,gBAAP,MAA6B,kBAA7B,C,CAEA;;AACA,OAAO,2BAAP;AAEA,SAASC,GAAT,QAAoB,KAApB;AAEA,SAASC,cAAT,QAA+B,oBAA/B;AAEA,SAASC,iBAAT,QAAkC,sBAAlC;AAEA,SAASC,aAAT,QAA8B,4BAA9B;AAEA,OAAOC,eAAP,MAA4B,iBAA5B,C,CAEA;;AACA,OAAO,gBAAP,C,CAEA;AACA;;;AACA,MAAMC,gBAAgB,GAAG,IAAIN,gBAAJ,CAAqB,OAArB,EAA8B,EAA9B,CAAzB,C,CAEA;;AACAM,gBAAgB,CAACC,IAAjB,GAAwBC,IAAxB,CAA6B,MAAM;AACjCC,EAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,YAA5B;AACD,CAFD;AAIA,MAAMC,KAAK,GAAGV,iBAAiB,EAA/B;AACA,MAAMW,IAAI,GAAGhB,QAAQ,CAACiB,UAAT,CACXN,QAAQ,CAACO,cAAT,CAAwB,MAAxB,CADW,CAAb;AAIAF,IAAI,CAACG,MAAL,eACE,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEJ,KAAjB;AAAA,yBACE,QAAC,aAAD;AAAA,2BACE,QAAC,cAAD;AAAA,6BACE,QAAC,KAAD,CAAO,UAAP;AAAA,+BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,E,CAYA;;AACA,IAAIK,MAAM,CAACC,GAAX,EAAgB;AACdD,EAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,CAAC,gBAAD,CAAlB,EAAsC,MAAM,CAC1C;AACD,GAFD;AAGD,C,CAED;AACA;AACA;;;AACAf,eAAe","sourcesContent":["/**\n * index.tsx\n *\n * This is the entry file for the application, only setup and boilerplate\n * code.\n */\n\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport * as React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport FontFaceObserver from 'fontfaceobserver';\n\n// Use consistent styling\nimport 'sanitize.css/sanitize.css';\n\nimport { App } from 'app';\n\nimport { HelmetProvider } from 'react-helmet-async';\n\nimport { configureAppStore } from 'store/configureStore';\n\nimport { ThemeProvider } from 'styles/theme/ThemeProvider';\n\nimport reportWebVitals from 'reportWebVitals';\n\n// Initialize languages\nimport './locales/i18n';\n\n// Observe loading of Inter (to remove 'Inter', remove the <link> tag in\n// the index.html file and this observer)\nconst openSansObserver = new FontFaceObserver('Inter', {});\n\n// When Inter is loaded, add a font-family using Inter to the body\nopenSansObserver.load().then(() => {\n  document.body.classList.add('fontLoaded');\n});\n\nconst store = configureAppStore();\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement,\n);\n\nroot.render(\n  <Provider store={store}>\n    <ThemeProvider>\n      <HelmetProvider>\n        <React.StrictMode>\n          <App />\n        </React.StrictMode>\n      </HelmetProvider>\n    </ThemeProvider>\n  </Provider>,\n);\n\n// Hot reloadable translation json files\nif (module.hot) {\n  module.hot.accept(['./locales/i18n'], () => {\n    // No need to render the App again because i18next works with the hooks\n  });\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}