{"ast":null,"code":"/**\n * This file is seperate from the './i18n.ts' simply to make the Hot Module Replacement work seamlessly.\n * Your components can import this file in 'messages.ts' files which would ruin the HMR if this isn't a separate module\n */\nexport const translations = {};\n/*\n * Converts the static JSON file into an object where keys are identical\n * but values are strings concatenated according to syntax.\n * This is helpful when using the JSON file keys and still having the intellisense support\n * along with type-safety\n */\n\nexport const convertLanguageJsonToObject = function (json) {\n  let objToConvertTo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : translations;\n  let current = arguments.length > 2 ? arguments[2] : undefined;\n  Object.keys(json).forEach(key => {\n    const currentLookupKey = current ? `${current}.${key}` : key;\n\n    if (typeof json[key] === 'object') {\n      objToConvertTo[key] = {};\n      convertLanguageJsonToObject(json[key], objToConvertTo[key], currentLookupKey);\n    } else {\n      objToConvertTo[key] = currentLookupKey;\n    }\n  });\n};","map":{"version":3,"sources":["/Users/lamduong/Planner/TripPlanner/TripPlanner/src/locales/translations.ts"],"names":["translations","convertLanguageJsonToObject","json","objToConvertTo","current","Object","keys","forEach","key","currentLookupKey"],"mappings":"AAEA;AACA;AACA;AACA;AAEA,OAAO,MAAMA,YAAwD,GACnE,EADK;AAGP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,2BAA2B,GAAG,UACzCC,IADyC,EAItC;AAAA,MAFHC,cAEG,uEAFcH,YAEd;AAAA,MADHI,OACG;AACHC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,OAAlB,CAA0BC,GAAG,IAAI;AAC/B,UAAMC,gBAAgB,GAAGL,OAAO,GAAI,GAAEA,OAAQ,IAAGI,GAAI,EAArB,GAAyBA,GAAzD;;AACA,QAAI,OAAON,IAAI,CAACM,GAAD,CAAX,KAAqB,QAAzB,EAAmC;AACjCL,MAAAA,cAAc,CAACK,GAAD,CAAd,GAAsB,EAAtB;AACAP,MAAAA,2BAA2B,CACzBC,IAAI,CAACM,GAAD,CADqB,EAEzBL,cAAc,CAACK,GAAD,CAFW,EAGzBC,gBAHyB,CAA3B;AAKD,KAPD,MAOO;AACLN,MAAAA,cAAc,CAACK,GAAD,CAAd,GAAsBC,gBAAtB;AACD;AACF,GAZD;AAaD,CAlBM","sourcesContent":["import { ConvertedToObjectType, TranslationJsonType } from './types';\n\n/**\n * This file is seperate from the './i18n.ts' simply to make the Hot Module Replacement work seamlessly.\n * Your components can import this file in 'messages.ts' files which would ruin the HMR if this isn't a separate module\n */\n\nexport const translations: ConvertedToObjectType<TranslationJsonType> =\n  {} as any;\n\n/*\n * Converts the static JSON file into an object where keys are identical\n * but values are strings concatenated according to syntax.\n * This is helpful when using the JSON file keys and still having the intellisense support\n * along with type-safety\n */\nexport const convertLanguageJsonToObject = (\n  json: any,\n  objToConvertTo = translations,\n  current?: string,\n) => {\n  Object.keys(json).forEach(key => {\n    const currentLookupKey = current ? `${current}.${key}` : key;\n    if (typeof json[key] === 'object') {\n      objToConvertTo[key] = {};\n      convertLanguageJsonToObject(\n        json[key],\n        objToConvertTo[key],\n        currentLookupKey,\n      );\n    } else {\n      objToConvertTo[key] = currentLookupKey;\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"module"}