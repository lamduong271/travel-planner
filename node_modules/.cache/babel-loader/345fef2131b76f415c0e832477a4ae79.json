{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/lamduong/Planner/TripPlanner/TripPlanner/src/app/pages/HomePage/Features/GithubRepoForm/index.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FormLabel } from 'app/components/FormLabel';\nimport { Input } from './components/Input';\nimport { RepoItem } from './RepoItem';\nimport { TextButton } from './components/TextButton';\nimport { selectUsername, selectRepos, selectLoading, selectError } from './slice/selectors';\nimport { LoadingIndicator } from 'app/components/LoadingIndicator';\nimport { RepoErrorType } from './slice/types';\nimport { useGithubRepoFormSlice } from './slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GithubRepoForm() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    actions\n  } = useGithubRepoFormSlice();\n  const username = useSelector(selectUsername);\n  const repos = useSelector(selectRepos);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  const onChangeUsername = evt => {\n    dispatch(actions.changeUsername(evt.currentTarget.value));\n    dispatch(actions.loadRepos());\n  };\n\n  const useEffectOnMount = effect => {\n    _s();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(effect, []);\n  };\n\n  _s(useEffectOnMount, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  useEffectOnMount(() => {\n    // When initial state username is not null, submit the form to load repos\n    if (username && username.trim().length > 0) {\n      dispatch(actions.loadRepos());\n    }\n  });\n\n  const onSubmitForm = evt => {\n    /* istanbul ignore next  */\n    if (evt !== undefined && evt.preventDefault) {\n      evt.preventDefault();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      onSubmit: onSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Github Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          placeholder: \"Type any Github username\",\n          value: username,\n          onChange: onChangeUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingIndicator, {\n          small: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), (repos === null || repos === void 0 ? void 0 : repos.length) > 0 ? /*#__PURE__*/_jsxDEV(List, {\n      children: repos.map(repo => /*#__PURE__*/_jsxDEV(RepoItem, {\n        name: repo.name,\n        starCount: repo.stargazers_count,\n        url: repo.html_url\n      }, repo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(ErrorText, {\n      children: repoErrorText(error)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(GithubRepoForm, \"Ma5QRdkhE0ckT0eIE1NRmfmWww4=\", true, function () {\n  return [useGithubRepoFormSlice, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = GithubRepoForm;\nexport const repoErrorText = error => {\n  switch (error) {\n    case RepoErrorType.USER_NOT_FOUND:\n      return 'There is no such user ðŸ˜ž';\n\n    case RepoErrorType.USERNAME_EMPTY:\n      return 'Type any Github username';\n\n    case RepoErrorType.USER_HAS_NO_REPO:\n      return 'User has no repository ðŸ¥º';\n\n    case RepoErrorType.GITHUB_RATE_LIMIT:\n      return 'Looks like github api`s rate limit(60 request/h) has exceeded ðŸ¤”';\n\n    default:\n      return 'An error has occurred!';\n  }\n};\n\nconst Wrapper = _styled.div.withConfig({\n  displayName: \"GithubRepoForm__Wrapper\",\n  componentId: \"sc-1to5s2j-0\"\n})([\"\", \"{margin:16px 0;font-size:0.875rem;}\"], TextButton);\n\n_c2 = Wrapper;\n\nconst InputWrapper = _styled.div.withConfig({\n  displayName: \"GithubRepoForm__InputWrapper\",\n  componentId: \"sc-1to5s2j-1\"\n})([\"display:flex;align-items:center;\", \"{width:\", \"%;margin-right:0.5rem;}\"], Input, 100 / 3);\n\n_c3 = InputWrapper;\n\nconst ErrorText = _styled.span.withConfig({\n  displayName: \"GithubRepoForm__ErrorText\",\n  componentId: \"sc-1to5s2j-2\"\n})([\"color:\", \";\"], p => p.theme.text);\n\n_c4 = ErrorText;\n\nconst FormGroup = _styled.form.withConfig({\n  displayName: \"GithubRepoForm__FormGroup\",\n  componentId: \"sc-1to5s2j-3\"\n})([\"display:flex;flex-direction:column;margin-bottom:1rem;\", \"{margin-bottom:0.25rem;margin-left:0.125rem;}\"], FormLabel);\n\n_c5 = FormGroup;\n\nconst List = _styled.div.withConfig({\n  displayName: \"GithubRepoForm__List\",\n  componentId: \"sc-1to5s2j-4\"\n})([\"\"]);\n\n_c6 = List;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"GithubRepoForm\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"InputWrapper\");\n$RefreshReg$(_c4, \"ErrorText\");\n$RefreshReg$(_c5, \"FormGroup\");\n$RefreshReg$(_c6, \"List\");","map":{"version":3,"sources":["/Users/lamduong/Planner/TripPlanner/TripPlanner/src/app/pages/HomePage/Features/GithubRepoForm/index.tsx"],"names":["React","useEffect","useSelector","useDispatch","FormLabel","Input","RepoItem","TextButton","selectUsername","selectRepos","selectLoading","selectError","LoadingIndicator","RepoErrorType","useGithubRepoFormSlice","GithubRepoForm","actions","username","repos","isLoading","error","dispatch","onChangeUsername","evt","changeUsername","currentTarget","value","loadRepos","useEffectOnMount","effect","trim","length","onSubmitForm","undefined","preventDefault","map","repo","name","stargazers_count","html_url","id","repoErrorText","USER_NOT_FOUND","USERNAME_EMPTY","USER_HAS_NO_REPO","GITHUB_RATE_LIMIT","Wrapper","styled","div","InputWrapper","ErrorText","span","p","theme","text","FormGroup","form","List"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components/macro';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FormLabel } from 'app/components/FormLabel';\nimport { Input } from './components/Input';\nimport { RepoItem } from './RepoItem';\nimport { TextButton } from './components/TextButton';\nimport {\n  selectUsername,\n  selectRepos,\n  selectLoading,\n  selectError,\n} from './slice/selectors';\nimport { LoadingIndicator } from 'app/components/LoadingIndicator';\nimport { RepoErrorType } from './slice/types';\nimport { useGithubRepoFormSlice } from './slice';\n\nexport function GithubRepoForm() {\n  const { actions } = useGithubRepoFormSlice();\n\n  const username = useSelector(selectUsername);\n  const repos = useSelector(selectRepos);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  const onChangeUsername = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(actions.changeUsername(evt.currentTarget.value));\n    dispatch(actions.loadRepos());\n  };\n\n  const useEffectOnMount = (effect: React.EffectCallback) => {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(effect, []);\n  };\n\n  useEffectOnMount(() => {\n    // When initial state username is not null, submit the form to load repos\n    if (username && username.trim().length > 0) {\n      dispatch(actions.loadRepos());\n    }\n  });\n\n  const onSubmitForm = (evt?: React.FormEvent<HTMLFormElement>) => {\n    /* istanbul ignore next  */\n    if (evt !== undefined && evt.preventDefault) {\n      evt.preventDefault();\n    }\n  };\n\n  return (\n    <Wrapper>\n      <FormGroup onSubmit={onSubmitForm}>\n        <FormLabel>Github Username</FormLabel>\n        <InputWrapper>\n          <Input\n            type=\"text\"\n            placeholder=\"Type any Github username\"\n            value={username}\n            onChange={onChangeUsername}\n          />\n          {isLoading && <LoadingIndicator small />}\n        </InputWrapper>\n      </FormGroup>\n      {repos?.length > 0 ? (\n        <List>\n          {repos.map(repo => (\n            <RepoItem\n              key={repo.id}\n              name={repo.name}\n              starCount={repo.stargazers_count}\n              url={repo.html_url}\n            />\n          ))}\n        </List>\n      ) : error ? (\n        <ErrorText>{repoErrorText(error)}</ErrorText>\n      ) : null}\n    </Wrapper>\n  );\n}\n\nexport const repoErrorText = (error: RepoErrorType) => {\n  switch (error) {\n    case RepoErrorType.USER_NOT_FOUND:\n      return 'There is no such user ðŸ˜ž';\n    case RepoErrorType.USERNAME_EMPTY:\n      return 'Type any Github username';\n    case RepoErrorType.USER_HAS_NO_REPO:\n      return 'User has no repository ðŸ¥º';\n    case RepoErrorType.GITHUB_RATE_LIMIT:\n      return 'Looks like github api`s rate limit(60 request/h) has exceeded ðŸ¤”';\n    default:\n      return 'An error has occurred!';\n  }\n};\n\nconst Wrapper = styled.div`\n  ${TextButton} {\n    margin: 16px 0;\n    font-size: 0.875rem;\n  }\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${Input} {\n    width: ${100 / 3}%;\n    margin-right: 0.5rem;\n  }\n`;\n\nconst ErrorText = styled.span`\n  color: ${p => p.theme.text};\n`;\n\nconst FormGroup = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1rem;\n\n  ${FormLabel} {\n    margin-bottom: 0.25rem;\n    margin-left: 0.125rem;\n  }\n`;\n\nconst List = styled.div``;\n"]},"metadata":{},"sourceType":"module"}