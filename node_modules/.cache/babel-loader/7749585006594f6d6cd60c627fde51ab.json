{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { createInjectorsEnhancer } from 'redux-injectors';\nimport createSagaMiddleware from 'redux-saga';\nimport { createReducer } from './reducers';\nexport function configureAppStore() {\n  const reduxSagaMonitorOptions = {};\n  const sagaMiddleware = createSagaMiddleware(reduxSagaMonitorOptions);\n  const {\n    run: runSaga\n  } = sagaMiddleware; // Create the store with saga middleware\n\n  const middlewares = [sagaMiddleware];\n  const enhancers = [createInjectorsEnhancer({\n    createReducer,\n    runSaga\n  })];\n  const store = configureStore({\n    reducer: createReducer(),\n    middleware: defaultMiddleware => [...defaultMiddleware(), ...middlewares],\n    devTools:\n    /* istanbul ignore next line */\n    process.env.NODE_ENV !== 'production' || process.env.PUBLIC_URL.length > 0,\n    enhancers\n  });\n  return store;\n}","map":{"version":3,"sources":["/Users/lamduong/Planner/TripPlanner/TripPlanner/src/store/configureStore.ts"],"names":["configureStore","createInjectorsEnhancer","createSagaMiddleware","createReducer","configureAppStore","reduxSagaMonitorOptions","sagaMiddleware","run","runSaga","middlewares","enhancers","store","reducer","middleware","defaultMiddleware","devTools","process","env","NODE_ENV","PUBLIC_URL","length"],"mappings":"AAAA,SAASA,cAAT,QAA8C,kBAA9C;AACA,SAASC,uBAAT,QAAwC,iBAAxC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,SAASC,aAAT,QAA8B,YAA9B;AAEA,OAAO,SAASC,iBAAT,GAA6B;AAClC,QAAMC,uBAAuB,GAAG,EAAhC;AACA,QAAMC,cAAc,GAAGJ,oBAAoB,CAACG,uBAAD,CAA3C;AACA,QAAM;AAAEE,IAAAA,GAAG,EAAEC;AAAP,MAAmBF,cAAzB,CAHkC,CAKlC;;AACA,QAAMG,WAAW,GAAG,CAACH,cAAD,CAApB;AAEA,QAAMI,SAAS,GAAG,CAChBT,uBAAuB,CAAC;AACtBE,IAAAA,aADsB;AAEtBK,IAAAA;AAFsB,GAAD,CADP,CAAlB;AAOA,QAAMG,KAAK,GAAGX,cAAc,CAAC;AAC3BY,IAAAA,OAAO,EAAET,aAAa,EADK;AAE3BU,IAAAA,UAAU,EAAEC,iBAAiB,IAAI,CAAC,GAAGA,iBAAiB,EAArB,EAAyB,GAAGL,WAA5B,CAFN;AAG3BM,IAAAA,QAAQ;AACN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IACAF,OAAO,CAACC,GAAR,CAAYE,UAAZ,CAAuBC,MAAvB,GAAgC,CANP;AAO3BV,IAAAA;AAP2B,GAAD,CAA5B;AAUA,SAAOC,KAAP;AACD","sourcesContent":["import { configureStore, StoreEnhancer } from '@reduxjs/toolkit';\nimport { createInjectorsEnhancer } from 'redux-injectors';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { createReducer } from './reducers';\n\nexport function configureAppStore() {\n  const reduxSagaMonitorOptions = {};\n  const sagaMiddleware = createSagaMiddleware(reduxSagaMonitorOptions);\n  const { run: runSaga } = sagaMiddleware;\n\n  // Create the store with saga middleware\n  const middlewares = [sagaMiddleware];\n\n  const enhancers = [\n    createInjectorsEnhancer({\n      createReducer,\n      runSaga,\n    }),\n  ] as StoreEnhancer[];\n\n  const store = configureStore({\n    reducer: createReducer(),\n    middleware: defaultMiddleware => [...defaultMiddleware(), ...middlewares],\n    devTools:\n      /* istanbul ignore next line */\n      process.env.NODE_ENV !== 'production' ||\n      process.env.PUBLIC_URL.length > 0,\n    enhancers,\n  });\n\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}