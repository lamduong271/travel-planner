{"ast":null,"code":"import i18next from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport en from './en/translation.json';\nimport de from './de/translation.json';\nimport { convertLanguageJsonToObject } from './translations';\nexport const translationsJson = {\n  en: {\n    translation: en\n  },\n  de: {\n    translation: de\n  }\n}; // Create the 'translations' object to provide full intellisense support for the static json files.\n\nconvertLanguageJsonToObject(en);\nexport const i18n = i18next // pass the i18n instance to react-i18next.\n.use(initReactI18next) // detect user language\n// learn more: https://github.com/i18next/i18next-browser-languageDetector\n.use(LanguageDetector) // init i18next\n// for all options read: https://www.i18next.com/overview/configuration-options\n.init({\n  resources: translationsJson,\n  fallbackLng: 'en',\n  debug: process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test',\n  interpolation: {\n    escapeValue: false // not needed for react as it escapes by default\n\n  }\n});","map":{"version":3,"sources":["/Users/lamduong/Planner/TripPlanner/TripPlanner/src/locales/i18n.ts"],"names":["i18next","initReactI18next","LanguageDetector","en","de","convertLanguageJsonToObject","translationsJson","translation","i18n","use","init","resources","fallbackLng","debug","process","env","NODE_ENV","interpolation","escapeValue"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AAEA,OAAOC,EAAP,MAAe,uBAAf;AACA,OAAOC,EAAP,MAAe,uBAAf;AACA,SAASC,2BAAT,QAA4C,gBAA5C;AAEA,OAAO,MAAMC,gBAAgB,GAAG;AAC9BH,EAAAA,EAAE,EAAE;AACFI,IAAAA,WAAW,EAAEJ;AADX,GAD0B;AAI9BC,EAAAA,EAAE,EAAE;AACFG,IAAAA,WAAW,EAAEH;AADX;AAJ0B,CAAzB,C,CASP;;AACAC,2BAA2B,CAACF,EAAD,CAA3B;AAEA,OAAO,MAAMK,IAAI,GAAGR,OAAO,CACzB;AADyB,CAExBS,GAFiB,CAEbR,gBAFa,EAGlB;AACA;AAJkB,CAKjBQ,GALiB,CAKbP,gBALa,EAMlB;AACA;AAPkB,CAQjBQ,IARiB,CAQZ;AACJC,EAAAA,SAAS,EAAEL,gBADP;AAEJM,EAAAA,WAAW,EAAE,IAFT;AAGJC,EAAAA,KAAK,EACHC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCF,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAJhE;AAMJC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,KADA,CACO;;AADP;AANX,CARY,CAAb","sourcesContent":["import i18next from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport en from './en/translation.json';\nimport de from './de/translation.json';\nimport { convertLanguageJsonToObject } from './translations';\n\nexport const translationsJson = {\n  en: {\n    translation: en,\n  },\n  de: {\n    translation: de,\n  },\n};\n\n// Create the 'translations' object to provide full intellisense support for the static json files.\nconvertLanguageJsonToObject(en);\n\nexport const i18n = i18next\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    resources: translationsJson,\n    fallbackLng: 'en',\n    debug:\n      process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test',\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n  });\n"]},"metadata":{},"sourceType":"module"}