{"ast":null,"code":"/**\n * Combine all reducers in this file and export the combined reducers.\n */\nimport { combineReducers } from '@reduxjs/toolkit';\n\n/**\n * Merges the main reducer with the router state and dynamically injected reducers\n */\nexport function createReducer() {\n  let injectedReducers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  // Initially we don't have any injectedReducers, so returning identity function to avoid the error\n  if (Object.keys(injectedReducers).length === 0) {\n    return state => state;\n  } else {\n    return combineReducers({ ...injectedReducers\n    });\n  }\n}","map":{"version":3,"sources":["/Users/lamduong/Planner/TripPlanner/TripPlanner/src/store/reducers.ts"],"names":["combineReducers","createReducer","injectedReducers","Object","keys","length","state"],"mappings":"AAAA;AACA;AACA;AAEA,SAASA,eAAT,QAAgC,kBAAhC;;AAIA;AACA;AACA;AACA,OAAO,SAASC,aAAT,GAAoE;AAAA,MAA7CC,gBAA6C,uEAAJ,EAAI;;AACzE;AACA,MAAIC,MAAM,CAACC,IAAP,CAAYF,gBAAZ,EAA8BG,MAA9B,KAAyC,CAA7C,EAAgD;AAC9C,WAAOC,KAAK,IAAIA,KAAhB;AACD,GAFD,MAEO;AACL,WAAON,eAAe,CAAC,EACrB,GAAGE;AADkB,KAAD,CAAtB;AAGD;AACF","sourcesContent":["/**\n * Combine all reducers in this file and export the combined reducers.\n */\n\nimport { combineReducers } from '@reduxjs/toolkit';\n\nimport { InjectedReducersType } from 'utils/types/injector-typings';\n\n/**\n * Merges the main reducer with the router state and dynamically injected reducers\n */\nexport function createReducer(injectedReducers: InjectedReducersType = {}) {\n  // Initially we don't have any injectedReducers, so returning identity function to avoid the error\n  if (Object.keys(injectedReducers).length === 0) {\n    return state => state;\n  } else {\n    return combineReducers({\n      ...injectedReducers,\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}